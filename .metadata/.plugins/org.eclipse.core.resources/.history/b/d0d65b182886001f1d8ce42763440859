package com.texasstudentmedia;

import java.util.Timer;

import android.app.TabActivity;
import android.content.Intent;
import android.content.res.Configuration;
import android.os.Bundle;
import android.util.Log;
import android.view.KeyEvent;
import android.view.View;
import android.view.animation.AnimationUtils;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ListView;
import android.widget.TabHost;
import android.widget.TabHost.TabSpec;
import android.widget.ViewFlipper;


public class TabbedMenu extends TabActivity{
	private final String TAG = "Texas Student Media";
	private TabHost tab_host;
	private Timer timer;
	private boolean override_back_button;

	@Override
	public void onCreate(Bundle savedInstanceState){
		super.onCreate(savedInstanceState);
		setContentView(R.layout.menu);
		Log.v(TAG, "Inside of " + this.getClass().getName());
		setTitle("Texas Student Media v" + ((TexasStudentMedia) getApplication()).getVersion());
		
		// Blame the i*hone for this
		override_back_button = false;
		
		// Create a timer for testing
		timer = new Timer();
		
		// Setup tabs
		tab_host = getTabHost();
		
		TabSpec ts = tab_host.newTabSpec("SECTIONS")
			.setIndicator("Sections")
			.setContent(R.id.tab1);
		tab_host.addTab(ts);
		ts = tab_host.newTabSpec("BREAKING")
			.setIndicator("Breaking")
			.setContent(R.id.tab23);
		tab_host.addTab(ts);
		ts = tab_host.newTabSpec("POPULAR")
			.setIndicator("Popular")
			.setContent(R.id.tab23);
		tab_host.addTab(ts);
		ts = tab_host.newTabSpec("RADIO")
			.setIndicator("Radio")
			.setContent(R.id.tab4);
		tab_host.addTab(ts);
		ts = tab_host.newTabSpec("SETTINGS")
			.setIndicator("Settings")
			.setContent(R.id.tab5);
		tab_host.addTab(ts);
		tab_host.setCurrentTab(0);
		
		// Add Tab Listener to set the various FeedView instances accordingly
		tab_host.setOnTabChangedListener(new TabHost.OnTabChangeListener(){
			@Override
			public void onTabChanged(String tabId) {
				try{	
					Log.v(TAG, "Switching to: " + tabId);

					// Reset back button (as a precaution)
					override_back_button = false;
					
					// Lets make some lists
					// TODO: This will probably be a source of lag
					final ListView list = (ListView) findViewById(R.id.feed_view_list);
					final int ndx = tabId.equals("BREAKING") ? 0 : tabId.equals("POPULAR") ? 1 : -1;
					if (ndx == -1)
						return;
	
					list.setAdapter(new FeedPreviewItemListAdapter(TabbedMenu.this, (((TexasStudentMedia) getApplication()).getFeeds()).get(ndx).getItems()));
					list.setOnItemClickListener(new OnItemClickListener(){
						@Override
						public void onItemClick(AdapterView<?> av, View v, int pos, long id) {
							// Get selected feed's name
							String feed_name = ((Feed) (((TexasStudentMedia) getApplication()).getFeeds()).get(ndx)).getName();
							Log.v(TAG, feed_name);
							
							// Launch feed viewer w/ data from feed
							Intent intent = new Intent();
							// Pass index of current feed
							intent.putExtra("feed_index", ndx);
							// Pass index of feed item to be viewed
							intent.putExtra("feed_item_index", pos);
							intent.setClass(TabbedMenu.this, FeedItemView.class);
							TabbedMenu.this.startActivity(intent);
						}
					});
				}catch (Exception e){
					Log.e(TAG, "FFFFFFFFFFFFFFUUUUUUUUUUUUUUUUUUUUUUUUU", e);
				}
			}
		});
		
		
		// Setting up list of feeds (for Tab 1)
		final ListView feed_list = (ListView) findViewById(R.id.feed_list);
		try{
			feed_list.setAdapter(new MenuItemListAdapter(this, ((TexasStudentMedia) getApplication()).getFeeds()));
			feed_list.setOnItemClickListener(new OnItemClickListener(){
				@Override
				public void onItemClick(AdapterView<?> av, View v, int pos, long id) {
					// Get selected feed's name
					final int ndx = pos;
					String feed_name = ((Feed) feed_list.getItemAtPosition(pos)).getName();
					Log.v(TAG, feed_name);

					
					// Animate to next view
					ViewFlipper flipper = (ViewFlipper) findViewById(R.id.flipper);
					flipper.setAnimation(AnimationUtils.loadAnimation(v.getContext(), R.anim.push_left_out));
					flipper.showNext();
					
					// Setup data in next view
					ListView list = (ListView) findViewById(R.id.feed_view_list);
					list.setAdapter(new FeedPreviewItemListAdapter(TabbedMenu.this, (((TexasStudentMedia) getApplication()).getFeeds()).get(pos).getItems()));
					list.setOnItemClickListener(new OnItemClickListener(){
						@Override
						public void onItemClick(AdapterView<?> av, View v, int pos, long id) {
							// Get selected feed's name
							String feed_name = ((Feed) (((TexasStudentMedia) getApplication()).getFeeds()).get(ndx)).getName();
							Log.v(TAG, feed_name);
							
							// Launch feed viewer w/ data from feed
							Intent intent = new Intent();
							// Pass index of current feed
							intent.putExtra("feed_index", ndx);
							// Pass index of feed item to be viewed
							intent.putExtra("feed_item_index", pos);
							intent.setClass(TabbedMenu.this, FeedItemView.class);
							TabbedMenu.this.startActivity(intent);
						}
					});

					// Blame the i*hone for this
					override_back_button = false;
				}
			});
			
		}catch (Exception e){
			e.printStackTrace();
			Log.e(TAG, "", e);
		}
		
	}
	@Override
	public boolean onKeyDown(int keyCode, KeyEvent event) {
	    if ((keyCode == KeyEvent.KEYCODE_BACK) && override_back_button) {
	        Log.v(TAG, "Back button overwritten!");

			// Lets go back to the feed list
			ViewFlipper flipper = (ViewFlipper) findViewById(R.id.flipper);
			flipper.setAnimation(AnimationUtils.loadAnimation(findViewById(R.id.tab1).getContext(), R.anim.push_left_out));
			flipper.showPrevious();

			// Reset back button
			override_back_button = false;
			
			// Stop the propagation
	    	return true;
	    }else
	    	return super.onKeyDown(keyCode, event);
	}
	
	@Override
	public void onRestoreInstanceState(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.tabbedmenu);

	}

	@Override
	public void onConfigurationChanged(Configuration newConfig){
		super.onConfigurationChanged(newConfig);
	}
}