package com.texasstudentmedia;

import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.HashMap;

import javax.xml.parsers.FactoryConfigurationError;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.parsers.SAXParserFactory;

import org.xml.sax.Attributes;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.XMLReader;
import org.xml.sax.helpers.DefaultHandler;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;

public class Splash extends Activity {
	private final String TAG = "Texas Student Media";
	private SafeThread thread;
	private ArrayList<Feed> feeds;

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.splash);

		// Safely retrieve, parse, and save data from RSS feeds
		thread = new SafeThread() {
			public void doStuff() {
				// Minimum number of items to retrieve for each feed
				final int min_items = 5;

				// URLs for feeds
				String feed_urls[][] = {
						{ "The Daily Texan: Breaking",
								"http://dailytexanonline.com/rss/spreed/main.xml" },
						{ "The Daily Texan: News",
								"http://dailytexanonline.com/rss/spreed/news.xml" },
						{ "The Daily Texan: Sports",
								"http://dailytexanonline.com/rss/spreed/sports.xml" },
						{ "The Daily Texan: Opinion",
								"http://dailytexanonline.com/rss/spreed/opinion.xml" },
						{ "The Daily Texan: Life & Arts",
								"http://dailytexanonline.com/rss/spreed/lifeandarts.xml" },
						// {"Texas Travesty", ""},
						{ "Inside Our Campus",
								"http://insideourcampus.com/feed/" },
						// {"Tuesday Coupons", ""}
				};

				// Create each feed item and start fetching data
				feeds = new ArrayList<Feed>();
				for(int i=0; i<feed_urls.length; i++){
					Feed feed = new Feed(feed_urls[i][0], feed_urls[i][1]);
					// Set number of items to download until continuing
					feed.setMaxItems(min_items);
					// Start downloading items
					feed.fetchData();
					// Keep track of feeds
					feeds.add(feed);
				}
				
				//Monitor feeds' progress
				/* Now that all feeds are doing their thing, wait until all are done
				 * As long as all feeds are downloading their content, they will still be fetching data.
				 * Once all feeds are done, the for loop will exit normally, causing the while loop to exit
				 * */
				while (true){
					int i=0;
					for(; i<feeds.size(); i++)
						if (feeds.get(i).isFetchingData())
							break;
					if (i == feeds.size())
						break;
				}

				// Feeds are done! Let's save them.
				((TexasStudentMedia) getApplication()).setFeeds(feeds);
				
				// Display list of feeds
				try {
					Intent intent = new Intent();
					intent.setClass(Splash.this, Menu.class);
					Splash.this.startActivity(intent);
				} catch (Exception e) {
					e.printStackTrace();
				}

				// No need to fetch data again
				Splash.this.finish();
				this.kill();
			}
		};
		thread.start();
	}

	@SuppressWarnings("unused")
	private void displayErrorMessage(String str) {
	}

	@Override
	public void onStop() {
		// Kill off all threads created
		for(int i=0; i<feeds.size(); i++)
			feeds.get(i).stop();
		thread.kill();
		super.onStop();
	}
}
